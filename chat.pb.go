// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: chat.proto

package twitch

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageTypeTwitchChatEvent int32

const (
	MessageTypeTwitchChatEvent_TWITCH_CHAT_EVENT_TYPE_MESSAGE_IN MessageTypeTwitchChatEvent = 0
)

// Enum value maps for MessageTypeTwitchChatEvent.
var (
	MessageTypeTwitchChatEvent_name = map[int32]string{
		0: "TWITCH_CHAT_EVENT_TYPE_MESSAGE_IN",
	}
	MessageTypeTwitchChatEvent_value = map[string]int32{
		"TWITCH_CHAT_EVENT_TYPE_MESSAGE_IN": 0,
	}
)

func (x MessageTypeTwitchChatEvent) Enum() *MessageTypeTwitchChatEvent {
	p := new(MessageTypeTwitchChatEvent)
	*p = x
	return p
}

func (x MessageTypeTwitchChatEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageTypeTwitchChatEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[0].Descriptor()
}

func (MessageTypeTwitchChatEvent) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[0]
}

func (x MessageTypeTwitchChatEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageTypeTwitchChatEvent.Descriptor instead.
func (MessageTypeTwitchChatEvent) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

type MessageTypeTwitchChatRequest int32

const (
	MessageTypeTwitchChatRequest_TWITCH_CHAT_REQUEST_TYPE_SEND_REQ  MessageTypeTwitchChatRequest = 0
	MessageTypeTwitchChatRequest_TWITCH_CHAT_REQUEST_TYPE_SEND_RESP MessageTypeTwitchChatRequest = 1
)

// Enum value maps for MessageTypeTwitchChatRequest.
var (
	MessageTypeTwitchChatRequest_name = map[int32]string{
		0: "TWITCH_CHAT_REQUEST_TYPE_SEND_REQ",
		1: "TWITCH_CHAT_REQUEST_TYPE_SEND_RESP",
	}
	MessageTypeTwitchChatRequest_value = map[string]int32{
		"TWITCH_CHAT_REQUEST_TYPE_SEND_REQ":  0,
		"TWITCH_CHAT_REQUEST_TYPE_SEND_RESP": 1,
	}
)

func (x MessageTypeTwitchChatRequest) Enum() *MessageTypeTwitchChatRequest {
	p := new(MessageTypeTwitchChatRequest)
	*p = x
	return p
}

func (x MessageTypeTwitchChatRequest) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageTypeTwitchChatRequest) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[1].Descriptor()
}

func (MessageTypeTwitchChatRequest) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[1]
}

func (x MessageTypeTwitchChatRequest) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageTypeTwitchChatRequest.Descriptor instead.
func (MessageTypeTwitchChatRequest) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

type ChatStatus int32

const (
	ChatStatus_CHAT_STATUS_UNKNOWN   ChatStatus = 0
	ChatStatus_CHAT_STATUS_OFF       ChatStatus = 1
	ChatStatus_CHAT_STATUS_CONNECTED ChatStatus = 2
	ChatStatus_CHAT_STATUS_ERROR     ChatStatus = 3
)

// Enum value maps for ChatStatus.
var (
	ChatStatus_name = map[int32]string{
		0: "CHAT_STATUS_UNKNOWN",
		1: "CHAT_STATUS_OFF",
		2: "CHAT_STATUS_CONNECTED",
		3: "CHAT_STATUS_ERROR",
	}
	ChatStatus_value = map[string]int32{
		"CHAT_STATUS_UNKNOWN":   0,
		"CHAT_STATUS_OFF":       1,
		"CHAT_STATUS_CONNECTED": 2,
		"CHAT_STATUS_ERROR":     3,
	}
)

func (x ChatStatus) Enum() *ChatStatus {
	p := new(ChatStatus)
	*p = x
	return p
}

func (x ChatStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[2].Descriptor()
}

func (ChatStatus) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[2]
}

func (x ChatStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatStatus.Descriptor instead.
func (ChatStatus) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

type ChatEventType int32

const (
	ChatEventType_EVENT_TYPE_UNSPECIFIED ChatEventType = 0
	ChatEventType_EVENT_TYPE_STATUS      ChatEventType = 1
	ChatEventType_EVENT_TYPE_JOIN        ChatEventType = 2
)

// Enum value maps for ChatEventType.
var (
	ChatEventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "EVENT_TYPE_STATUS",
		2: "EVENT_TYPE_JOIN",
	}
	ChatEventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED": 0,
		"EVENT_TYPE_STATUS":      1,
		"EVENT_TYPE_JOIN":        2,
	}
)

func (x ChatEventType) Enum() *ChatEventType {
	p := new(ChatEventType)
	*p = x
	return p
}

func (x ChatEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[3].Descriptor()
}

func (ChatEventType) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[3]
}

func (x ChatEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatEventType.Descriptor instead.
func (ChatEventType) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

type IRCConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled       bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Profile       string `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	MessagePrefix string `protobuf:"bytes,3,opt,name=message_prefix,json=messagePrefix,proto3" json:"message_prefix,omitempty"`
}

func (x *IRCConfig) Reset() {
	*x = IRCConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IRCConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IRCConfig) ProtoMessage() {}

func (x *IRCConfig) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IRCConfig.ProtoReflect.Descriptor instead.
func (*IRCConfig) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *IRCConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *IRCConfig) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *IRCConfig) GetMessagePrefix() string {
	if x != nil {
		return x.MessagePrefix
	}
	return ""
}

type TwitchChatRequestSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *TwitchChatRequestSendRequest) Reset() {
	*x = TwitchChatRequestSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwitchChatRequestSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchChatRequestSendRequest) ProtoMessage() {}

func (x *TwitchChatRequestSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchChatRequestSendRequest.ProtoReflect.Descriptor instead.
func (*TwitchChatRequestSendRequest) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

func (x *TwitchChatRequestSendRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type TwitchChatRequestSendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TwitchChatRequestSendResponse) Reset() {
	*x = TwitchChatRequestSendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwitchChatRequestSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchChatRequestSendResponse) ProtoMessage() {}

func (x *TwitchChatRequestSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchChatRequestSendResponse.ProtoReflect.Descriptor instead.
func (*TwitchChatRequestSendResponse) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

type EmotePosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   uint32 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *EmotePosition) Reset() {
	*x = EmotePosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmotePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmotePosition) ProtoMessage() {}

func (x *EmotePosition) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmotePosition.ProtoReflect.Descriptor instead.
func (*EmotePosition) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

func (x *EmotePosition) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *EmotePosition) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

type Emote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Positions []*EmotePosition `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
}

func (x *Emote) Reset() {
	*x = Emote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emote) ProtoMessage() {}

func (x *Emote) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emote.ProtoReflect.Descriptor instead.
func (*Emote) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{4}
}

func (x *Emote) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Emote) GetPositions() []*EmotePosition {
	if x != nil {
		return x.Positions
	}
	return nil
}

type TwitchChatEventMessageIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text   string            `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Args   []string          `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Nick   string            `protobuf:"bytes,3,opt,name=nick,proto3" json:"nick,omitempty"`
	Emotes []*Emote          `protobuf:"bytes,4,rep,name=emotes,proto3" json:"emotes,omitempty"`
	Tags   map[string]string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsMod  *bool             `protobuf:"varint,6,opt,name=is_mod,json=isMod,proto3,oneof" json:"is_mod,omitempty"`
}

func (x *TwitchChatEventMessageIn) Reset() {
	*x = TwitchChatEventMessageIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwitchChatEventMessageIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchChatEventMessageIn) ProtoMessage() {}

func (x *TwitchChatEventMessageIn) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchChatEventMessageIn.ProtoReflect.Descriptor instead.
func (*TwitchChatEventMessageIn) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{5}
}

func (x *TwitchChatEventMessageIn) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TwitchChatEventMessageIn) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *TwitchChatEventMessageIn) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *TwitchChatEventMessageIn) GetEmotes() []*Emote {
	if x != nil {
		return x.Emotes
	}
	return nil
}

func (x *TwitchChatEventMessageIn) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TwitchChatEventMessageIn) GetIsMod() bool {
	if x != nil && x.IsMod != nil {
		return *x.IsMod
	}
	return false
}

type ChatEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   ChatEventType `protobuf:"varint,1,opt,name=type,proto3,enum=twitch.ChatEventType" json:"type,omitempty"`
	Detail string        `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	Status ChatStatus    `protobuf:"varint,3,opt,name=status,proto3,enum=twitch.ChatStatus" json:"status,omitempty"`
}

func (x *ChatEvent) Reset() {
	*x = ChatEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatEvent) ProtoMessage() {}

func (x *ChatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatEvent.ProtoReflect.Descriptor instead.
func (*ChatEvent) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{6}
}

func (x *ChatEvent) GetType() ChatEventType {
	if x != nil {
		return x.Type
	}
	return ChatEventType_EVENT_TYPE_UNSPECIFIED
}

func (x *ChatEvent) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *ChatEvent) GetStatus() ChatStatus {
	if x != nil {
		return x.Status
	}
	return ChatStatus_CHAT_STATUS_UNKNOWN
}

var File_chat_proto protoreflect.FileDescriptor

var file_chat_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x22, 0x66, 0x0a, 0x09, 0x49, 0x52, 0x43, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x32, 0x0a, 0x1c,
	0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x22, 0x1f, 0x0a, 0x1d, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x37, 0x0a, 0x0d, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x4c, 0x0a, 0x05, 0x45, 0x6d,
	0x6f, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2e,
	0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9d, 0x02, 0x0a, 0x18, 0x54, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63,
	0x6b, 0x12, 0x25, 0x0a, 0x06, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65,
	0x52, 0x06, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2e,
	0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6d,
	0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05, 0x69, 0x73, 0x4d, 0x6f,
	0x64, 0x88, 0x01, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x22, 0x7a, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2a, 0x43, 0x0a, 0x1a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x21, 0x54, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x48, 0x41,
	0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x4e, 0x10, 0x00, 0x2a, 0x6d, 0x0a, 0x1c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x21, 0x54, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x00,
	0x12, 0x26, 0x0a, 0x22, 0x54, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4e,
	0x44, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10, 0x01, 0x2a, 0x6c, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f,
	0x46, 0x46, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x15, 0x0a, 0x11, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x2a, 0x57, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x10, 0x02, 0x42,
	0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75,
	0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x6f, 0x75, 0x73, 0x6b, 0x6f, 0x69, 0x2f, 0x74, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData = file_chat_proto_rawDesc
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_proto_rawDescData)
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_chat_proto_goTypes = []any{
	(MessageTypeTwitchChatEvent)(0),       // 0: twitch.MessageTypeTwitchChatEvent
	(MessageTypeTwitchChatRequest)(0),     // 1: twitch.MessageTypeTwitchChatRequest
	(ChatStatus)(0),                       // 2: twitch.ChatStatus
	(ChatEventType)(0),                    // 3: twitch.ChatEventType
	(*IRCConfig)(nil),                     // 4: twitch.IRCConfig
	(*TwitchChatRequestSendRequest)(nil),  // 5: twitch.TwitchChatRequestSendRequest
	(*TwitchChatRequestSendResponse)(nil), // 6: twitch.TwitchChatRequestSendResponse
	(*EmotePosition)(nil),                 // 7: twitch.EmotePosition
	(*Emote)(nil),                         // 8: twitch.Emote
	(*TwitchChatEventMessageIn)(nil),      // 9: twitch.TwitchChatEventMessageIn
	(*ChatEvent)(nil),                     // 10: twitch.ChatEvent
	nil,                                   // 11: twitch.TwitchChatEventMessageIn.TagsEntry
}
var file_chat_proto_depIdxs = []int32{
	7,  // 0: twitch.Emote.positions:type_name -> twitch.EmotePosition
	8,  // 1: twitch.TwitchChatEventMessageIn.emotes:type_name -> twitch.Emote
	11, // 2: twitch.TwitchChatEventMessageIn.tags:type_name -> twitch.TwitchChatEventMessageIn.TagsEntry
	3,  // 3: twitch.ChatEvent.type:type_name -> twitch.ChatEventType
	2,  // 4: twitch.ChatEvent.status:type_name -> twitch.ChatStatus
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*IRCConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TwitchChatRequestSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TwitchChatRequestSendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*EmotePosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Emote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TwitchChatEventMessageIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ChatEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chat_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		EnumInfos:         file_chat_proto_enumTypes,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_rawDesc = nil
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}
