// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: eventsub.proto

package twitch

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageTypeEventSub int32

const (
	MessageTypeEventSub_TYPE_UNSPECIFIED                 MessageTypeEventSub = 0
	MessageTypeEventSub_TYPE_EVENTSUB_EVENT              MessageTypeEventSub = 1
	MessageTypeEventSub_TYPE_CHANNEL_RAID                MessageTypeEventSub = 2
	MessageTypeEventSub_TYPE_CHANNEL_FOLLOW              MessageTypeEventSub = 3
	MessageTypeEventSub_TYPE_CHANNEL_CHEER               MessageTypeEventSub = 4
	MessageTypeEventSub_TYPE_CHANNEL_POINT_CUSTOM_REDEEM MessageTypeEventSub = 5
)

// Enum value maps for MessageTypeEventSub.
var (
	MessageTypeEventSub_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_EVENTSUB_EVENT",
		2: "TYPE_CHANNEL_RAID",
		3: "TYPE_CHANNEL_FOLLOW",
		4: "TYPE_CHANNEL_CHEER",
		5: "TYPE_CHANNEL_POINT_CUSTOM_REDEEM",
	}
	MessageTypeEventSub_value = map[string]int32{
		"TYPE_UNSPECIFIED":                 0,
		"TYPE_EVENTSUB_EVENT":              1,
		"TYPE_CHANNEL_RAID":                2,
		"TYPE_CHANNEL_FOLLOW":              3,
		"TYPE_CHANNEL_CHEER":               4,
		"TYPE_CHANNEL_POINT_CUSTOM_REDEEM": 5,
	}
)

func (x MessageTypeEventSub) Enum() *MessageTypeEventSub {
	p := new(MessageTypeEventSub)
	*p = x
	return p
}

func (x MessageTypeEventSub) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageTypeEventSub) Descriptor() protoreflect.EnumDescriptor {
	return file_eventsub_proto_enumTypes[0].Descriptor()
}

func (MessageTypeEventSub) Type() protoreflect.EnumType {
	return &file_eventsub_proto_enumTypes[0]
}

func (x MessageTypeEventSub) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageTypeEventSub.Descriptor instead.
func (MessageTypeEventSub) EnumDescriptor() ([]byte, []int) {
	return file_eventsub_proto_rawDescGZIP(), []int{0}
}

type EventSubStatus int32

const (
	EventSubStatus_EVENT_SUB_STATUS_UNKNOWN   EventSubStatus = 0
	EventSubStatus_EVENT_SUB_STATUS_OFF       EventSubStatus = 1
	EventSubStatus_EVENT_SUB_STATUS_CONNECTED EventSubStatus = 2
	EventSubStatus_EVENT_SUB_STATUS_ERROR     EventSubStatus = 3
)

// Enum value maps for EventSubStatus.
var (
	EventSubStatus_name = map[int32]string{
		0: "EVENT_SUB_STATUS_UNKNOWN",
		1: "EVENT_SUB_STATUS_OFF",
		2: "EVENT_SUB_STATUS_CONNECTED",
		3: "EVENT_SUB_STATUS_ERROR",
	}
	EventSubStatus_value = map[string]int32{
		"EVENT_SUB_STATUS_UNKNOWN":   0,
		"EVENT_SUB_STATUS_OFF":       1,
		"EVENT_SUB_STATUS_CONNECTED": 2,
		"EVENT_SUB_STATUS_ERROR":     3,
	}
)

func (x EventSubStatus) Enum() *EventSubStatus {
	p := new(EventSubStatus)
	*p = x
	return p
}

func (x EventSubStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventSubStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_eventsub_proto_enumTypes[1].Descriptor()
}

func (EventSubStatus) Type() protoreflect.EnumType {
	return &file_eventsub_proto_enumTypes[1]
}

func (x EventSubStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventSubStatus.Descriptor instead.
func (EventSubStatus) EnumDescriptor() ([]byte, []int) {
	return file_eventsub_proto_rawDescGZIP(), []int{1}
}

type EventSubStatusEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status EventSubStatus `protobuf:"varint,1,opt,name=status,proto3,enum=twitch.EventSubStatus" json:"status,omitempty"`
	Detail string         `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *EventSubStatusEvent) Reset() {
	*x = EventSubStatusEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventsub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSubStatusEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSubStatusEvent) ProtoMessage() {}

func (x *EventSubStatusEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eventsub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSubStatusEvent.ProtoReflect.Descriptor instead.
func (*EventSubStatusEvent) Descriptor() ([]byte, []int) {
	return file_eventsub_proto_rawDescGZIP(), []int{0}
}

func (x *EventSubStatusEvent) GetStatus() EventSubStatus {
	if x != nil {
		return x.Status
	}
	return EventSubStatus_EVENT_SUB_STATUS_UNKNOWN
}

func (x *EventSubStatusEvent) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type EventSubConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Profile string `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *EventSubConfig) Reset() {
	*x = EventSubConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventsub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSubConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSubConfig) ProtoMessage() {}

func (x *EventSubConfig) ProtoReflect() protoreflect.Message {
	mi := &file_eventsub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSubConfig.ProtoReflect.Descriptor instead.
func (*EventSubConfig) Descriptor() ([]byte, []int) {
	return file_eventsub_proto_rawDescGZIP(), []int{1}
}

func (x *EventSubConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *EventSubConfig) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

type EventUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login string `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EventUser) Reset() {
	*x = EventUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventsub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventUser) ProtoMessage() {}

func (x *EventUser) ProtoReflect() protoreflect.Message {
	mi := &file_eventsub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventUser.ProtoReflect.Descriptor instead.
func (*EventUser) Descriptor() ([]byte, []int) {
	return file_eventsub_proto_rawDescGZIP(), []int{2}
}

func (x *EventUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventUser) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *EventUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EventChannelCheer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAnonymous *bool      `protobuf:"varint,1,opt,name=is_anonymous,json=isAnonymous,proto3,oneof" json:"is_anonymous,omitempty"`
	From        *EventUser `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Broadcaster *EventUser `protobuf:"bytes,3,opt,name=broadcaster,proto3" json:"broadcaster,omitempty"`
	Message     *string    `protobuf:"bytes,4,opt,name=message,proto3,oneof" json:"message,omitempty"`
	Bits        uint32     `protobuf:"varint,5,opt,name=bits,proto3" json:"bits,omitempty"`
}

func (x *EventChannelCheer) Reset() {
	*x = EventChannelCheer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventsub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventChannelCheer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventChannelCheer) ProtoMessage() {}

func (x *EventChannelCheer) ProtoReflect() protoreflect.Message {
	mi := &file_eventsub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventChannelCheer.ProtoReflect.Descriptor instead.
func (*EventChannelCheer) Descriptor() ([]byte, []int) {
	return file_eventsub_proto_rawDescGZIP(), []int{3}
}

func (x *EventChannelCheer) GetIsAnonymous() bool {
	if x != nil && x.IsAnonymous != nil {
		return *x.IsAnonymous
	}
	return false
}

func (x *EventChannelCheer) GetFrom() *EventUser {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *EventChannelCheer) GetBroadcaster() *EventUser {
	if x != nil {
		return x.Broadcaster
	}
	return nil
}

func (x *EventChannelCheer) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *EventChannelCheer) GetBits() uint32 {
	if x != nil {
		return x.Bits
	}
	return 0
}

type EventChannelFollow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Follower    *EventUser `protobuf:"bytes,1,opt,name=follower,proto3" json:"follower,omitempty"`
	Broadcaster *EventUser `protobuf:"bytes,2,opt,name=broadcaster,proto3" json:"broadcaster,omitempty"`
	At          int64      `protobuf:"varint,3,opt,name=at,proto3" json:"at,omitempty"`
}

func (x *EventChannelFollow) Reset() {
	*x = EventChannelFollow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventsub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventChannelFollow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventChannelFollow) ProtoMessage() {}

func (x *EventChannelFollow) ProtoReflect() protoreflect.Message {
	mi := &file_eventsub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventChannelFollow.ProtoReflect.Descriptor instead.
func (*EventChannelFollow) Descriptor() ([]byte, []int) {
	return file_eventsub_proto_rawDescGZIP(), []int{4}
}

func (x *EventChannelFollow) GetFollower() *EventUser {
	if x != nil {
		return x.Follower
	}
	return nil
}

func (x *EventChannelFollow) GetBroadcaster() *EventUser {
	if x != nil {
		return x.Broadcaster
	}
	return nil
}

func (x *EventChannelFollow) GetAt() int64 {
	if x != nil {
		return x.At
	}
	return 0
}

type Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cost   int32  `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	Prompt string `protobuf:"bytes,4,opt,name=prompt,proto3" json:"prompt,omitempty"`
}

func (x *Reward) Reset() {
	*x = Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventsub_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

func (x *Reward) ProtoReflect() protoreflect.Message {
	mi := &file_eventsub_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_eventsub_proto_rawDescGZIP(), []int{5}
}

func (x *Reward) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Reward) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Reward) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *Reward) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

type EventChannelPointsCustomRewardRedemption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Broadcaster *EventUser `protobuf:"bytes,2,opt,name=broadcaster,proto3" json:"broadcaster,omitempty"`
	User        *EventUser `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Input       string     `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	Status      string     `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Reward      *Reward    `protobuf:"bytes,6,opt,name=reward,proto3" json:"reward,omitempty"`
	RedeemedAt  int64      `protobuf:"varint,7,opt,name=redeemed_at,json=redeemedAt,proto3" json:"redeemed_at,omitempty"`
}

func (x *EventChannelPointsCustomRewardRedemption) Reset() {
	*x = EventChannelPointsCustomRewardRedemption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventsub_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventChannelPointsCustomRewardRedemption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventChannelPointsCustomRewardRedemption) ProtoMessage() {}

func (x *EventChannelPointsCustomRewardRedemption) ProtoReflect() protoreflect.Message {
	mi := &file_eventsub_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventChannelPointsCustomRewardRedemption.ProtoReflect.Descriptor instead.
func (*EventChannelPointsCustomRewardRedemption) Descriptor() ([]byte, []int) {
	return file_eventsub_proto_rawDescGZIP(), []int{6}
}

func (x *EventChannelPointsCustomRewardRedemption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventChannelPointsCustomRewardRedemption) GetBroadcaster() *EventUser {
	if x != nil {
		return x.Broadcaster
	}
	return nil
}

func (x *EventChannelPointsCustomRewardRedemption) GetUser() *EventUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *EventChannelPointsCustomRewardRedemption) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *EventChannelPointsCustomRewardRedemption) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *EventChannelPointsCustomRewardRedemption) GetReward() *Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *EventChannelPointsCustomRewardRedemption) GetRedeemedAt() int64 {
	if x != nil {
		return x.RedeemedAt
	}
	return 0
}

type EventChannelRaid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromBroadcaster *EventUser `protobuf:"bytes,1,opt,name=from_broadcaster,json=fromBroadcaster,proto3" json:"from_broadcaster,omitempty"`
	ToBroadcaster   *EventUser `protobuf:"bytes,2,opt,name=to_broadcaster,json=toBroadcaster,proto3" json:"to_broadcaster,omitempty"`
	Viewers         uint32     `protobuf:"varint,3,opt,name=viewers,proto3" json:"viewers,omitempty"`
}

func (x *EventChannelRaid) Reset() {
	*x = EventChannelRaid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventsub_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventChannelRaid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventChannelRaid) ProtoMessage() {}

func (x *EventChannelRaid) ProtoReflect() protoreflect.Message {
	mi := &file_eventsub_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventChannelRaid.ProtoReflect.Descriptor instead.
func (*EventChannelRaid) Descriptor() ([]byte, []int) {
	return file_eventsub_proto_rawDescGZIP(), []int{7}
}

func (x *EventChannelRaid) GetFromBroadcaster() *EventUser {
	if x != nil {
		return x.FromBroadcaster
	}
	return nil
}

func (x *EventChannelRaid) GetToBroadcaster() *EventUser {
	if x != nil {
		return x.ToBroadcaster
	}
	return nil
}

func (x *EventChannelRaid) GetViewers() uint32 {
	if x != nil {
		return x.Viewers
	}
	return 0
}

var File_eventsub_proto protoreflect.FileDescriptor

var file_eventsub_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x5d, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x75,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x44, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x75, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x45, 0x0a,
	0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x68, 0x65, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0c, 0x69, 0x73,
	0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x33, 0x0a, 0x0b, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x0b, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x69, 0x74,
	0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x73, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f,
	0x75, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x88,
	0x01, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x2d, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0b, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x61, 0x74, 0x22, 0x5a, 0x0a, 0x06, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x22, 0x8d, 0x02, 0x0a, 0x28, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x33, 0x0a, 0x0b, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x61, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x10, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0e, 0x74, 0x6f, 0x5f, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x0d, 0x74, 0x6f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x2a, 0xb2, 0x01, 0x0a,
	0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x55, 0x42, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x52, 0x41, 0x49, 0x44, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f,
	0x57, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x43, 0x48, 0x45, 0x45, 0x52, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x44, 0x45, 0x45, 0x4d, 0x10,
	0x05, 0x2a, 0x84, 0x01, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x55,
	0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x6f, 0x75,
	0x73, 0x6b, 0x6f, 0x69, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_eventsub_proto_rawDescOnce sync.Once
	file_eventsub_proto_rawDescData = file_eventsub_proto_rawDesc
)

func file_eventsub_proto_rawDescGZIP() []byte {
	file_eventsub_proto_rawDescOnce.Do(func() {
		file_eventsub_proto_rawDescData = protoimpl.X.CompressGZIP(file_eventsub_proto_rawDescData)
	})
	return file_eventsub_proto_rawDescData
}

var file_eventsub_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_eventsub_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_eventsub_proto_goTypes = []any{
	(MessageTypeEventSub)(0),                         // 0: twitch.MessageTypeEventSub
	(EventSubStatus)(0),                              // 1: twitch.EventSubStatus
	(*EventSubStatusEvent)(nil),                      // 2: twitch.EventSubStatusEvent
	(*EventSubConfig)(nil),                           // 3: twitch.EventSubConfig
	(*EventUser)(nil),                                // 4: twitch.EventUser
	(*EventChannelCheer)(nil),                        // 5: twitch.EventChannelCheer
	(*EventChannelFollow)(nil),                       // 6: twitch.EventChannelFollow
	(*Reward)(nil),                                   // 7: twitch.Reward
	(*EventChannelPointsCustomRewardRedemption)(nil), // 8: twitch.EventChannelPointsCustomRewardRedemption
	(*EventChannelRaid)(nil),                         // 9: twitch.EventChannelRaid
}
var file_eventsub_proto_depIdxs = []int32{
	1,  // 0: twitch.EventSubStatusEvent.status:type_name -> twitch.EventSubStatus
	4,  // 1: twitch.EventChannelCheer.from:type_name -> twitch.EventUser
	4,  // 2: twitch.EventChannelCheer.broadcaster:type_name -> twitch.EventUser
	4,  // 3: twitch.EventChannelFollow.follower:type_name -> twitch.EventUser
	4,  // 4: twitch.EventChannelFollow.broadcaster:type_name -> twitch.EventUser
	4,  // 5: twitch.EventChannelPointsCustomRewardRedemption.broadcaster:type_name -> twitch.EventUser
	4,  // 6: twitch.EventChannelPointsCustomRewardRedemption.user:type_name -> twitch.EventUser
	7,  // 7: twitch.EventChannelPointsCustomRewardRedemption.reward:type_name -> twitch.Reward
	4,  // 8: twitch.EventChannelRaid.from_broadcaster:type_name -> twitch.EventUser
	4,  // 9: twitch.EventChannelRaid.to_broadcaster:type_name -> twitch.EventUser
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_eventsub_proto_init() }
func file_eventsub_proto_init() {
	if File_eventsub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eventsub_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*EventSubStatusEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventsub_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*EventSubConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventsub_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*EventUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventsub_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*EventChannelCheer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventsub_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*EventChannelFollow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventsub_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventsub_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*EventChannelPointsCustomRewardRedemption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventsub_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*EventChannelRaid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eventsub_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eventsub_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eventsub_proto_goTypes,
		DependencyIndexes: file_eventsub_proto_depIdxs,
		EnumInfos:         file_eventsub_proto_enumTypes,
		MessageInfos:      file_eventsub_proto_msgTypes,
	}.Build()
	File_eventsub_proto = out.File
	file_eventsub_proto_rawDesc = nil
	file_eventsub_proto_goTypes = nil
	file_eventsub_proto_depIdxs = nil
}
